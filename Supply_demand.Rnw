\documentclass[a4paper]{article}
\usepackage[cm]{fullpage}
\usepackage{graphicx}
\usepackage{float}
\usepackage{caption}
\textwidth=18cm
\usepackage[backend=bibtex]{biblatex}

<<echo=FALSE, warning=FALSE>>=
rm(list = ls()) # I'm removing everything here so be careful to just press go.
# setwd(getwd()) # I added this to make the code portalble. 
setwd("/Users/laughoutlouder/Documents/Thorn_soil/Thornley_source_sink")
Sys.setenv(TEXINPUTS=getwd(),
           BIBINPUTS=getwd(),
           BSTINPUTS=getwd())
@

\begin{document}
\title{Sperry's supply-demand-loss model}
\author{Liam Langan}
\maketitle

<<echo=FALSE, warning=FALSE>>=
library(knitr);
mycol=c("green","blue","purple","red")
@
\section{Introduction}
Sperry and Love (2015 (What plant hydraulics can tell us about responses to climate-change droughts)) developed a model where a supply function (transpiration rate) ($E$) (kg hr$^{-1}$ m$^{-2}$) is derived which calculates the potential rate/amount of water able to be supplied from the soil to the atmosphere. Transpiration ($E$) is influenced by the canopy sap pressure (p\_canopy) (MPa) via changes to the hydraulic conductance of the plant ($k$) (kg hr$^{-1}$ MPa$^{-1}$ m$^{-2}$). Hydraulic conductance of the plant ($k$) is the conductance when there is no difference in matric potential between the soil and the leaf.  

Below are parameters for the vulnerability-conductance curve,
<<>>==
##-----------------------------------------------------------------------------------------------
p50 <- 2.5 # the matric potential where conductance is reduced by 50%
k_max <- 8 # maximum plant conductance - this is a trait in aDGVM2
res <- 1/k_max # resistance is simply the inverse of conductance
p_canopy <- matrix(seq(0.0, 8, length=1000), seq(0.0, 8, length=1000), nrow=1000, ncol=5) 
# this assumes initial plant matric potential is the same as the soil matric potential
predawn_soil_mat_pot <- seq(0,3, length=5) 
E_p_canopy <- matrix(0,0,nrow=1000, ncol=5) # matrix to hold the supply function values

##-----------------------------------------------------------------------------------------------
## make transpiration demand --------------------------------------------------------------------
# Maximum stomatal conductance
# (Sperry 2016, 2130 kg h^-1 m^-2) NOTE should be (kg h^-1 MPa^-1 m^-2) (12563.1 in Excel doc)
Gmax <- 12563.1 
G <- rep(Gmax, length=5)
D <- 0.5*0.001 #(Sperry 2016, leaf-to-air vapor pressure deficit 1 kPa)(0.001 converts to MPa) 
# NOTE VPD converstion from kPa to MPa isn't documented in Sperry, I'm doing it as it makes 
# sense and produces realistic amounts of transpirtational demand. 

# Pcrit, i.e. a matric potential we choose where we decide conductance is effectively zero. 
# Used this to get Ecrit, i.e. maximum transpiration beyond which leads to runaway cavitation  
P_crit <- 6 # MPa - this is arbitrary and could be a plant trait. 
# In Sperry (2016) a P_crit cutoff is chosen (either very low conductance or 
# shallow slope of a tangent to the transpiration curve)

# get maximum transpiration possible based on Pcrit and soil matric potential 
E_crit <- rep(0, lenght=5) # maximum transpiration beyond which leads to runaway cavitation
evap_demand <- rep(0, lenght=5) # evaporative demand
@

with the the conductance vulnerability curve we use in aDGVM2, which is analagous to Sperry's curve, defined as:
<<>>==
k_p_canopy <- function(p_canopy) { ((1 - (1 / (1 + exp(3.0*(p50 - p_canopy)))))) / res }
@
The transpiration rate is the integral of the vulnerability-conductance curve between the soil (pre-dawn) matric potential and (p\_canopy) and is calculated as follows: 

Here we get the slope of the line which is tangent to the tanspiration curve at any particulat water potential. This slope is the conductance at this water potential. 

We calculate the maximum transpiration beyond which leads to runaway cavitation $E_{crit}$ based on a matric potential we choose where we decide conductance is effectively zero $P_{crit}$. 
<<>>==
##-----------------------------------------------------------------------------------------------
for(j in 1:5)
{
  ffx <- integrate(k_p_canopy, predawn_soil_mat_pot[j], P_crit )
  E_crit[j] <- pmax(0, ffx$value)
  evap_demand[j] <- G[j]*D
  if(evap_demand[j] > E_crit[j]) evap_demand[j] <- E_crit[j] # demand = maximum supply
}
@

We then calculate the matric potential where evaporative demand is met
<<warning=FALSE>>==
## quick and dirty method to find the psi where demand is met. 
demand_met_at_sperry <- rep(0, length=5)
psi_demand_met_at_sperry <- rep(0, length=5)
demand_met_at_slope_sperry <- rep(0, length=5)
loss_function_sperry <- rep(0, length=5)
regulated_transpiration <- rep(0, length=5)
regulated_leaf_psi <- rep(0, length=5)
 
##-----------------------------------------------------------------------------------------------
##-----------------------------------------------------------------------------------------------

#max regulation is the point where delta P hits its maximum, held constant at max once max passed
G <- matrix(Gmax, Gmax, ,nrow=1000, ncol=5)

psi_1 <- matrix(0,0,nrow=1000, ncol=5)#
slope_demand <- matrix(0,0,nrow=1000, ncol=5)
loss_fun_sp_gs <- matrix(0,0,nrow=1000, ncol=5)
reg_leaf_psi <- matrix(0,0,nrow=1000, ncol=5)

regulated_trans <- matrix(0,0,nrow=1000, ncol=5)
regulated_Gs <- matrix(0,0,nrow=1000, ncol=5)

non_regulated_Gs <- matrix(0,0,nrow=1000, ncol=5)

max_slo_sp <- rep(0, length=5)

for(j in 1:5)
{
  
  max_slo_sp[j] <- k_p_canopy(predawn_soil_mat_pot[j])

  for(i in 1:1000)
  {
   psi_1[,j] <- seq(0, max(p_canopy), length=1000) #psi_leaf[i]
   slope_demand[i,j] <- k_p_canopy(psi_1[i,j])
  
   ffx <- integrate(k_p_canopy, predawn_soil_mat_pot[j], psi_1[i,j] )
   E_p_canopy[i,j] <- pmax(0, ffx$value)
   non_regulated_Gs[i,j] <- E_p_canopy[i,j]/D 
   # E = G*VPD ---- G = E/VPD (VPD=1, 0.001 transforms to MPa)

   loss_fun_sp_gs[i,j] <- slope_demand[i,j] / max_slo_sp[j] 
   
   if(i==1) reg_leaf_psi[i,j] <- pmax(0, ((psi_1[i,j] - predawn_soil_mat_pot[j])
                                          *loss_fun_sp_gs[i,j]))

   if(i>1)
   {
     reg_leaf_psi[i,j] <- pmax(0, pmax(reg_leaf_psi[i-1,j], 
                                  ((psi_1[i,j] - predawn_soil_mat_pot[j])*loss_fun_sp_gs[i,j])))
   }
    
   ffx <- integrate(k_p_canopy, predawn_soil_mat_pot[j], 
                    predawn_soil_mat_pot[j] + reg_leaf_psi[i,j])
   regulated_trans[i,j] <- pmax(0, ffx$value)
   regulated_Gs[i,j] <- regulated_trans[i,j]/D # E=G*D -- G=E/D (D=1, 0.001 transforms to MPa)
   G[i,j] <- G[i,j]*loss_fun_sp_gs[i,j]
  }
}
 
demand_place_holder <- rep(0, length=5)
supply_limit_place_holder <- rep(0, length=5)
min_diff_place_holder <- rep(0, length=5)
supply_place_holder <- rep(0, length=5)

for(i in 1:5)
{
    a <-which(E_p_canopy[,i] >= evap_demand[i])
    demand_place_holder[i] <-a[2]
    
    min_diff <- regulated_trans[,i] - E_p_canopy[demand_place_holder[i]]
    min_diff_max <- which(min_diff == max(min_diff))
    supply_limit_place_holder[i] <- min_diff_max[1] 

    abs_min_diff <- abs(min_diff)
    abs_min_diff <- which(abs_min_diff == min(abs_min_diff))
    supply_place_holder[i] <- abs_min_diff[1]
}

@

%\begin(figure)
\begin{centering}
<<fig.width=16, echo=FALSE, fig.height=16, ,fig.cap="\\label{fig:figs}(A) Unregulated and regulated transpiration with supply demand limit. Where curves intersect the x-axis indicate the predawn/soil matric potential. (B) Regulated vs unregulated transpiration. the differing curves represent the responses for the differing predawn/soil matric potentials in (A). (C) Loss of stomatal conductance NOTE I haven't worked out how Sperry is producing his Fig.4 in Sperry and Love (2015). The differing curves correspond to the differing predawn/soil matric potentials in (A). (D) percentage loss of conductance.">>==
par(mfrow=c(2,2), mar=c(7,8,4,1))
plot(psi_1[,1], E_p_canopy[,1], ylim=c(0, 25), type="l", ylab="Transpiration rate E (kg hr^1 m^2)", xlab="Sap pressure (-MPa)", cex.lab=2.0, cex.axis=2.0,lwd=2.5)

points(psi_1[demand_place_holder[1],1], E_p_canopy[demand_place_holder[1],1], type="p", cex=1.6, pch=19, col="black")
points(reg_leaf_psi[supply_limit_place_holder[1],1], regulated_trans[supply_limit_place_holder[1],1], type="p", cex=1.8, pch=21, col="red", lwd=3)
points(reg_leaf_psi[demand_place_holder[1],1], regulated_trans[demand_place_holder[1],1], type="p", cex=2.8, pch=21, col="blue", lwd=3)

lines(psi_1[,2], E_p_canopy[,2], lwd=2)
points(psi_1[demand_place_holder[2],2], E_p_canopy[demand_place_holder[2],2], type="p", cex=1.6, pch=19, col="black")
points(predawn_soil_mat_pot[2] + reg_leaf_psi[supply_limit_place_holder[2],2], regulated_trans[supply_limit_place_holder[2],2], type="p", cex=1.8, pch=21, col="red", lwd=3)
points(predawn_soil_mat_pot[2] + reg_leaf_psi[demand_place_holder[2],2], regulated_trans[demand_place_holder[2],2], type="p", cex=2.8, pch=21, col="blue", lwd=3)

lines(psi_1[,3], E_p_canopy[,3], lwd=2)
points(psi_1[demand_place_holder[3],3], E_p_canopy[demand_place_holder[3],3], type="p", cex=1.6, pch=19, col="black")
points(predawn_soil_mat_pot[3] + reg_leaf_psi[supply_limit_place_holder[3],3], regulated_trans[supply_limit_place_holder[3],3], type="p", cex=1.8, pch=21, col="red", lwd=3)
points(predawn_soil_mat_pot[3] + reg_leaf_psi[demand_place_holder[3],3], regulated_trans[demand_place_holder[3],3], type="p", cex=2.8, pch=21, col="blue", lwd=3)

lines(psi_1[,4], E_p_canopy[,4], lwd=2)
points(psi_1[demand_place_holder[4],4], E_p_canopy[demand_place_holder[4],4], type="p", cex=1.6, pch=19, col="black")
points(predawn_soil_mat_pot[4] + reg_leaf_psi[supply_limit_place_holder[4],4], regulated_trans[supply_limit_place_holder[4],4], type="p", cex=1.8, pch=21, col="red", lwd=3)
points(predawn_soil_mat_pot[4] + reg_leaf_psi[demand_place_holder[4],4], regulated_trans[demand_place_holder[4],4], type="p", cex=2.8, pch=21, col="blue", lwd=3)

lines(psi_1[,5], E_p_canopy[,5], lwd=2)
points(psi_1[demand_place_holder[5],5], E_p_canopy[demand_place_holder[5],5], type="p", cex=1.6, pch=19, col="black")
points(predawn_soil_mat_pot[5] + reg_leaf_psi[supply_limit_place_holder[5],5], regulated_trans[supply_limit_place_holder[5],5], type="p", cex=1.8, pch=21, col="red", lwd=3)
points(predawn_soil_mat_pot[5] + reg_leaf_psi[demand_place_holder[5],5], regulated_trans[demand_place_holder[5],5], type="p", cex=2.8, pch=21, col="blue", lwd=3)


# lines(psi_canopy, cum_can_transport[,3], lwd=2)
# points(psi_demand_met_at_sperry[3], evap_demand[3], type="p", cex=0.9, pch=19, col="black")
# points(regulated_leaf_psi[3], regulated_transpiration[3], type="p", cex=1.6, pch=21, col="red", lwd=2)
# lines(psi_canopy, cum_can_transport[,4], lwd=2)
# points(psi_demand_met_at_sperry[4], evap_demand[4], type="p", cex=0.9, pch=19, col="black")
# points(regulated_leaf_psi[4], regulated_transpiration[4], type="p", cex=1.6, pch=21, col="red", lwd=2)
# lines(psi_canopy, cum_can_transport[,5], lwd=2)
# points(psi_demand_met_at_sperry[5], evap_demand[5], type="p", cex=0.9, pch=19, col="black")
# points(regulated_leaf_psi[5], regulated_transpiration[5], type="p", cex=1.6, pch=21, col="red", lwd=2)
# legend("topleft", c("unregulated transpiration & leaf psi","regulated transpiration & leaf psi","p50=2.5"), col=c("black", "red", "white"), pch = 1, cex=1.5, lwd=2, bty="n")
legend("topleft", c("unregulated transpiration & leaf psi","Demand limit", "regulated transpiration","p50=2.5"), col=c("black", "red", "blue", "white"), pch = 1, cex=1.5, lwd=2, bty="n")
text(7.5, 24.5,"(A)", cex=2)

 plot(E_p_canopy[,1], regulated_trans[,1], lwd=4, col="black", type="l", cex.lab=2.0, cex.axis=2.0, ylab="Regulated transpiration rate", xlab="Unregulated transpiration rate")
lines(E_p_canopy[,2], regulated_trans[,2], lwd=4, col="azure4", lty=1)
lines(E_p_canopy[,3], regulated_trans[,3], lwd=4, col="azure4", lty=1)
lines(E_p_canopy[,4], regulated_trans[,4], lwd=4, col="azure4", lty=1)
lines(E_p_canopy[,5], regulated_trans[,5], lwd=4, col="azure4", lty=1)
text(0.5, 12.5,"(B)", cex=2)

 plot(psi_1[,1], (1- regulated_Gs[,1]/non_regulated_Gs[,1])*100, lwd=4, col="black", type="l", cex.lab=2.0, cex.axis=2.0, ylim=c(0,100), xlab="Sap pressure (-MPa)", , ylab="% loss of Gs")
lines(psi_1[,2], (1- regulated_Gs[,2]/non_regulated_Gs[,2])*100, lwd=4, col="azure4", lty=1)
lines(psi_1[,3], (1- regulated_Gs[,3]/non_regulated_Gs[,3])*100, lwd=4, col="azure4", lty=1)
lines(psi_1[,4], (1- regulated_Gs[,4]/non_regulated_Gs[,4])*100, lwd=4, col="azure4", lty=1)
lines(psi_1[,5], (1- regulated_Gs[,5]/non_regulated_Gs[,5])*100, lwd=4, col="azure4", lty=1)
text(0.1, 100,"(C)", cex=2)

plot(p_canopy, (1 - k_p_canopy(p_canopy)/k_p_canopy(0))*100, type="l", ylab="% loss of conductance", xlab="Sap pressure (-MPa)", cex.lab=2.0, cex.axis=2.0,lwd=2.5)
text(0.1, 100,"(D)", cex=2)

@
\end{centering}

%\caption{Plot of 1:10 and a bar plot beside it in a figure that is 4x6 inches}
%\end(figure)

From Sperry (2016) "Mathematically, ΔP rises to a maximum before decreasing back to zero as E 0 increases to Ecrit. This decline in ΔP is unrealis- tic (Saliendra et al., 1995), so it is assumed that ΔP saturates at its maximum as E 0 increases. Eqn 5 expresses the outcome that xylem pressure is regulated in proportion to the damage caused by taking no action. (4) The regulated E corresponding to ΔP is determined from the supply function. (5) The G is solved from E/D to determine how much it is reduced below Gmax. The model does not partition G into stomatal vs boundary layer com- ponents, but G is controlled by stomatal regulation. Cuticular water loss is assumed to be zero." I was unsure what Sperry ment with $\Delta P$ saturates however examining Fig.1B one can see the regulated response is too extreme. Plotting the regulated leaf matric potential against the demand defined matiric reveals that the regulated leaf matric potential reaches a maximum and then decreases. Fixing the regulated leaf matric potential to its maximum value once it has passed this value solves this issue. The next issue to solve is how sperry is calculating his percentage loss of stomatal conductance.  


%begin{centering}
%<<fig.width=16, echo=FALSE, fig.height=8, ,fig.cap="\\label{fig:figs}Regulated leaf matric potential against the demand defined matiric potential.">>==
%par(mfrow=c(1,1), mar=c(7,8,4,1))
%plot(psi_canopy, regulated_leaf_psi[,1], type="l", ylab="Delta P ", xlab="Sap pressure (-MPa)", cex.lab=2.0, cex.axis=2.0,lwd=2.5)
%text(4.5, 7.8,"(A)", cex=2)

%@
%\end{centering}


\end{document}











