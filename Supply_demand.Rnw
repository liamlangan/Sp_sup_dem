\documentclass[a4paper]{article}
\usepackage[cm]{fullpage}
\usepackage{graphicx}
\usepackage{float}
\usepackage{caption}
\textwidth=18cm
\usepackage[backend=bibtex]{biblatex}

<<echo=FALSE, warning=FALSE>>=
rm(list = ls()) # I'm removing everything here so be careful to just press go.
# setwd(getwd()) # I added this to make the code portalble. 
setwd("/Users/laughoutlouder/Documents/Thorn_soil/Thornley_source_sink")
Sys.setenv(TEXINPUTS=getwd(),
           BIBINPUTS=getwd(),
           BSTINPUTS=getwd())
@

\begin{document}
\title{Sperry's supply-demand-loss model}
\author{Liam Langan}
\maketitle

<<echo=FALSE, warning=FALSE>>=
library(knitr);
mycol=c("green","blue","purple","red")
@
\section{Introduction}
Sperry and Love (2015 (What plant hydraulics can tell us about responses to climate-change droughts)) developed a model where a supply function ($E_{p-canopy}$) is derived which calculates the potential rate/amount of water able to be supplied from the soil to the atmosphere, i.e. potential transpiration. Transpiration is influenced by xylem pressure ($\psi_{xylem}$), hydraulic conductivity of the plant ($K_{plant}$), the hydraulic conductivity of the soil $K_{soil}$ and the rate at which hydraulic conductivity is reduced as xylem pressure increases or soil conductivity decreases.   

Below are parameters for the vulnerability-conductance curve,
<<>>==
p50 <- 2.5 # the matric potential where conductance is reduced by 50%
K_max <- 8 # maximum plant conductance - this is a trait in aDGVM2
res <- 1/K_max # resistance is simply the inverse of conductance
psi_canopy <- seq(0.0, 5, length=1000) 
predawn_soil_mat_pot <- seq(0,2, by=0.5) # initial plant matric potential = soil matric potential
cum_can_transport <- matrix(0,0,nrow=1000, ncol=5) # this is the supply function

## make transpiration demand --------------------------------------------------------------------------------------------
# Maximum stomatal conductance
Gmax <- 12563.1 # (Sperry 2016, 2130 kg h^-1 m^-2) NOTE should be (kg h^-1 MPa^-1 m^-2) (12563.1 in Excel doc)
G <- rep(Gmax, length=5)
VPD <- 0.5*0.001   # (Sperry 2016, leaf-to-air vapor pressure deficit 1 kPa) (0.001 converts to MPa) 
# NOTE VPD converstion from kPa to MPa isn't documented in Sperry, I'm doing it as it makes sense and produces realistic
# amounts of transpirtational demand. 
#evap_demand <- G*VPD

# need to define an Pcrit, i.e. a matric potential we choose where we decide conductance is effectively zero. 
# We use this to get Ecrit, i.e. maximum transpiration beyond which leads to runaway cavitation  
P_crit <- 4 # MPa - this is arbitrary and could be a plant trait. 
# In Sperry (2016) a P_crit cutoff is chosen (either very low conductance or 
# shallow slope of a tangent to the transpiration curve)

# get maximum transpiration possible based on Pcrit and soil matric potential 
E_crit <- rep(0, lenght=5) # maximum transpiration beyond which leads to runaway cavitation
evap_demand <- rep(0, lenght=5) # evaporative demand

@
with the the conductance vulnerability curve we use in aDGVM2, which is analagous to Sperry's curve, defined as:
<<>>==
sperry_cond <- function(psi_canopy) { ((1 - (1 / (1 + exp(3.0*(p50 - psi_canopy)))))) / res }
@
The transpiration rate is the integral of the vulnerability-conductance curve between any the soil (pre-dawn) matric potential and ($p-canopy$)(canopy sap pressure) and is calculated as follows: 
<<>>==
for(j in 1:length(predawn_soil_mat_pot))
  {
    for(i in 1:1000)
      {
        ffx <- integrate(sperry_cond, predawn_soil_mat_pot[j], psi_canopy[i] )
        cum_can_transport[i,j] <- pmax(0, ffx$value)
      }
}
@


<< echo=FALSE >>==
for(l in 1:length(predawn_soil_mat_pot)) # this just removes the zeros from the curves 
{
  kop <- which(cum_can_transport[,l] == 0)
  cum_can_transport[kop,l] <- NA
}

@
Here we get the slope of the line which is tangent to the tanspiration curve at any particulat water potential. This slope is the conductance at this water potential. 
<<>>==
cond_max_slope_sperry <- rep(0, lenght=5) # get the maximum slope of conductance given pre-dawn water potential
for(i in 1:length(predawn_soil_mat_pot))
  {
    cond_max_slope_sperry[i] <-  sperry_cond(predawn_soil_mat_pot[i]) 
    # for Sperry the maximum conductance is always the pre-dawn matric potential/soil matric potential 
  }
@

We calculate the maximum transpiration beyond which leads to runaway cavitation $E_{crit}$ based on a matric potential we choose where we decide conductance is effectively zero $P_{crit}$. 
<<>>==
for(j in 1:5)
  {
    ffx <- integrate(sperry_cond, predawn_soil_mat_pot[j], P_crit )
    E_crit[j] <- pmax(0, ffx$value)
    evap_demand[j] <- G[j]*VPD
    if(evap_demand[j] > E_crit[j]) evap_demand[j] <- E_crit[j] # demand can't be greater than maximum supply
  }
@

We then calculate the matric potential where evaporative demand is met
<<warning=FALSE>>==
## quick and dirty method to find the psi where demand is met. 
demand_met_at_sperry <- rep(0, length=5)
psi_demand_met_at_sperry <- rep(0, length=5)
demand_met_at_slope_sperry <- rep(0, length=5)
loss_function_sperry <- rep(0, length=5)
regulated_transpiration <- rep(0, length=5)
regulated_leaf_psi <- rep(0, length=5)

for(i in 1:5)
  {
    # positions on transport curve where supply can meet demand
    # this throws a warning but returns the first number which is what I want
    demand_met_at_sperry[i] <- which(cum_can_transport[,i] >= evap_demand[i]) 
    # the matric potential where demand is met
    psi_demand_met_at_sperry[i] <- psi_canopy[demand_met_at_sperry[i]] 
    # slope of tangent to supply/conductance curve where demand is met
    demand_met_at_slope_sperry[i] <- sperry_cond(psi_demand_met_at_sperry[i]) 
    # this is sperrys loss function (slope where demand is met / max slope)
    loss_function_sperry[i] <- demand_met_at_slope_sperry[i] / cond_max_slope_sperry 
    # this is the adjusted leaf matric potential dP = dP' * (demand_met_at_slope_sperry / cond_max_slope_sperry)
    regulated_leaf_psi[i] <- predawn_soil_mat_pot[i] + ((psi_demand_met_at_sperry[i] - predawn_soil_mat_pot[i])*loss_function_sperry[i])
    # this is the adjusted leaf matric potential dP = dP' * (demand_met_at_slope_sperry / cond_max_slope_sperry)
    # dP' = predawn_matric_potential - unregulated_matric_potential, this doesn't work unless dP is added to predawn matric potential

    ffx <- integrate(sperry_cond, predawn_soil_mat_pot[i], regulated_leaf_psi[i] )
    regulated_transpiration[i] <- pmax(0, ffx$value) # regulated transpiration (E in Sperry)
    G[i] <- G[i]*loss_function_sperry[i] # regulated stomatal conductance
    # E = G * VPD so G = E/VPD
    
  }

@


%\begin(figure)
\begin{centering}
<<fig.width=16, echo=FALSE, fig.height=8, ,fig.cap="\\label{fig:figs}Hydraulic conductance and transpitation as a function of sap xylem pressure.">>==
par(mfrow=c(1,2), mar=c(7,8,4,1))
plot(psi_canopy, sperry_cond(psi_canopy), type="l", ylab="Hydraulic conductance (kg hr^1 MPa^1 m^2)", xlab="Sap pressure (-MPa)", cex.lab=2.0, cex.axis=2.0,lwd=2.5)
plot(psi_canopy, cum_can_transport[,1], type="l", ylab="Transpiration rate E (kg hr^1 m^2)", xlab="Sap pressure (-MPa)", cex.lab=2.0, cex.axis=2.0,lwd=2.5)
points(psi_demand_met_at_sperry[1], evap_demand[1], type="p", cex=0.9, pch=19, col="black")
points(regulated_leaf_psi[1], regulated_transpiration[1], type="p", cex=1.6, pch=21, col="red", lwd=2)
lines(psi_canopy, cum_can_transport[,2], lwd=2)
points(psi_demand_met_at_sperry[2], evap_demand[2], type="p", cex=0.9, pch=19, col="black")
points(regulated_leaf_psi[2], regulated_transpiration[2], type="p", cex=1.6, pch=21, col="red", lwd=2)
lines(psi_canopy, cum_can_transport[,3], lwd=2)
points(psi_demand_met_at_sperry[3], evap_demand[3], type="p", cex=0.9, pch=19, col="black")
points(regulated_leaf_psi[3], regulated_transpiration[3], type="p", cex=1.6, pch=21, col="red", lwd=2)
lines(psi_canopy, cum_can_transport[,4], lwd=2)
points(psi_demand_met_at_sperry[4], evap_demand[4], type="p", cex=0.9, pch=19, col="black")
points(regulated_leaf_psi[4], regulated_transpiration[4], type="p", cex=1.6, pch=21, col="red", lwd=2)
lines(psi_canopy, cum_can_transport[,5], lwd=2)
points(psi_demand_met_at_sperry[5], evap_demand[5], type="p", cex=0.9, pch=19, col="black")
points(regulated_leaf_psi[5], regulated_transpiration[5], type="p", cex=1.6, pch=21, col="red", lwd=2)
legend("topleft", c("unregulated leaf psi","regulated leaf psi","p50=2.5"), col=c("black", "red", "white"), pch = 1, cex=1.5, lwd=2)

@
\end{centering}
%\caption{Plot of 1:10 and a bar plot beside it in a figure that is 4x6 inches}
%\end(figure)



\end{document}











